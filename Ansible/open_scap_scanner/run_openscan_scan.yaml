---
# Author: Raul Bringas
# raulbringasjr@gmail.com
# Version: 0.3
# Date: 11-08-2019
# Tested on: RHEL 6/7, CentOS 6/7


# Ansible playbook to run OpenSCAP scan on RHEL 6/7, CentOS 6/7 hosts
# Ansible playbook for remediation is created automatically based on the scan results

# Edit all values marked with *Change ME* to match your environment

- name: "Run OpenSCAP Scan and generate remediation playbook"
  hosts: all
  become: yes
  gather_facts: yes

  vars:
    # Select the appropriate OS, OpenSCAP profile and policy here
    oscap_profile: xccdf_org.ssgproject.content_profile_standard
    oscap_policy: "ssg-{{ ansible_distribution | lower }}{{ ansible_distribution_major_version }}-ds.xml"
    customer_email: "*Change ME* YOUR_EMAIL@YOUR_DOMAIN.COM"
    openscap_path: "/usr/share/xml/scap/ssg/content"
    oscap_remediation: "{{ openscap_path }}/{{ansible_hostname}}-remediation-playbook.yml"
    oscap_report: "{{ openscap_path }}/{{ ansible_hostname }}_oscap-report_{{ ansible_date_time.date }}_{{ ansible_date_time.time }}.html"

  tasks:

  # Set os_version for RHEL 6/7 as ansible_distribution returns "RedHat" not rhel...
  - name: "Adjust oscap_policy for RHEL"
    set_fact:
        oscap_policy: "ssg-rhel{{ansible_distribution_major_version}}-ds.xml"
    when: (ansible_facts['distribution'] == "RedHat")

  - name: "Add OpenSCAP repository for CentOS{{ ansible_distribution_major_version }}"
    yum_repository:
      name: openscap
      description: OpenSCAP Latest
      baseurl: https://copr-be.cloud.fedoraproject.org/results/openscapmaint/openscap-latest/epel-"{{ ansible_distribution_major_version }}"-$basearch
    when: (ansible_facts['distribution'] == "CentOS")

  # Check to ensure that openscap-scanner and required packages are installed
  - name: "Installing openscap-scanner and dependencies"
    package:
      name: "{{ item }}"
      state: latest
    with_items:
    - openscap-utils
    - scap-workbench
    - openscap-scanner
    - scap-security-guide

  - name: "Running an OpenSCAP scan on {{ ansible_hostname }}"
    command: oscap xccdf eval \
      --profile {{ oscap_profile }} \
      --results-arf "{{ openscap_path }}/{{ ansible_hostname }}-arf.xml" \
      --report "{{ oscap_report }}" \
      --fetch-remote-resources \
      "{{ openscap_path }}/{{ oscap_policy }}"

    # This is to prevent the failed message when exit return code is 2
    # Return code 1 = fail, 2 = system non-compliant
    register: oscap_cmd
    failed_when: oscap_cmd.rc == 1

  - name: "Generating Ansible remediation playbook based on scan results for {{ ansible_hostname }}"
    command: oscap xccdf generate fix --fix-type ansible \
      --fetch-remote-resources --result-id "" --output \
      "{{ oscap_remediation }}" \
      "{{ openscap_path }}/{{ ansible_hostname }}-arf.xml"

  - name: "Sending email with compliance report and remediation for {{ ansible_hostname }}."
    mail:
      host: "*Change ME* YOUR_SMTP_SERVER_HERE"
      subject: 'OpenSCAP Compliance Scan for {{ ansible_hostname }} has completed.'
      from: "*Change ME* YOUR_EMAIL_SENDER_ADDRESS_HERE"
      body: "Automated OpenSCAP scan of {{ ansible_hostname }} has completed.  Attached, please find the results of the compliance scan and the remediation playbook."
      to: "{{ customer_email }}"
      attach:
        - "{{ oscap_report }}"
        - "{{ oscap_remediation }}"
      charset: utf8
    delegate_to: "{{ ansible_hostname }}"
    tags: mail

  - name: "Removing openscap-scanner and dependencies"
    package:
      name: "{{ item }}"
      state: absent
    with_items:
    - openscap-utils
    - scap-workbench
    - openscap-scanner
    - scap-security-guide

  - name: "Remove OpenSCAP repository"
    yum_repository:
      name: openscap
      state: absent
